<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TrustFrameworkPolicy
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06"
  PolicySchemaVersion="0.3.0.0"
  TenantId="sawadyb2c.onmicrosoft.com"
  PolicyId="B2C_1A_TrustFrameworkExtensions_ForcePasswordReset"
  PublicPolicyUri="http://sawadyb2c.onmicrosoft.com/B2C_1A_TrustFrameworkExtensions_ForcePasswordReset">

  <BasePolicy>
    <TenantId>sawadyb2c.onmicrosoft.com</TenantId>
    <PolicyId>B2C_1A_TrustFrameworkExtensions</PolicyId>
  </BasePolicy>

  <BuildingBlocks>
    <ClaimsSchema>
      <ClaimType Id="forceChangePasswordNextLogin">
        <DisplayName>forceChangePasswordNextLogin</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Directory property, Whether the user password has expired</AdminHelpText>
      </ClaimType>
      <ClaimType Id="continueOnPasswordExpiration">
        <DisplayName>continueOnPasswordExpiration</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>continue ests non-interactive upon password expiration</AdminHelpText>
      </ClaimType>
      <ClaimType Id="samePassword">
        <DisplayName>samePassword</DisplayName>
        <DataType>boolean</DataType>
        <AdminHelpText>Whether user enters the same password</AdminHelpText>
      </ClaimType>
      <ClaimType Id="userMsg">
        <DisplayName></DisplayName>
        <DataType>string</DataType>
        <AdminHelpText>A claim responsible for holding user messages</AdminHelpText>
        <UserInputType>Paragraph</UserInputType>
      </ClaimType>
    </ClaimsSchema>
    <ClaimsTransformations>
      <!--Compare
      the old and new password-->
      <ClaimsTransformation Id="CompareOldAndNewPassword" TransformationMethod="CompareClaims">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="password" TransformationClaimType="inputClaim1" />
          <InputClaim ClaimTypeReferenceId="newPassword" TransformationClaimType="inputClaim2" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="operator" DataType="string" Value="EQUAL" />
        </InputParameters>
        <OutputClaims>
          <OutputClaim ClaimTypeReferenceId="samePassword" TransformationClaimType="outputClaim" />
        </OutputClaims>
      </ClaimsTransformation>
      <!--Assert
      whether the old and new passwords are same, and return the UserMessageIfClaimsTransformationBooleanValueIsNotEqual error message-->
      <ClaimsTransformation Id="ThrowErrorWhenPassowrdIsSame" TransformationMethod="AssertBooleanClaimIsEqualToValue">
        <InputClaims>
          <InputClaim ClaimTypeReferenceId="samePassword" TransformationClaimType="inputClaim" />
        </InputClaims>
        <InputParameters>
          <InputParameter Id="valueToCompareTo" DataType="boolean" Value="false" />
        </InputParameters>
      </ClaimsTransformation>
    </ClaimsTransformations>
  </BuildingBlocks>

  <ClaimsProviders>
    <ClaimsProvider>
      <DisplayName>Local Account SignIn</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="login-NonInteractive">
          <InputClaims>
            <!-- Continue if the password is expired  -->
            <InputClaim ClaimTypeReferenceId="continueOnPasswordExpiration" DefaultValue="true" />
          </InputClaims>
          <OutputClaims>
            <!-- Indicates whether user needs to reset the password.
            If the value of this claim is true, other claims aren't return-->
            <OutputClaim ClaimTypeReferenceId="forceChangePasswordNextLogin" PartnerClaimType="passwordExpired" />
          </OutputClaims>
        </TechnicalProfile>

        <!--Assert
        whether the new password is different than the old one. -->
        <TechnicalProfile Id="ThrowErrorWhenPassowrdIsSame">
          <DisplayName>Assert New Password is different</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="samePassword" />
          </OutputClaims>
          <OutputClaimsTransformations>
            <OutputClaimsTransformation ReferenceId="CompareOldAndNewPassword" />
            <OutputClaimsTransformation ReferenceId="ThrowErrorWhenPassowrdIsSame" />
          </OutputClaimsTransformations>
        </TechnicalProfile>

      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>Local Account</DisplayName>
      <TechnicalProfiles>
        <TechnicalProfile Id="SelfAsserted-LocalAccountSignin-Email">
          <OutputClaims>
            <!-- Bubble up the forceChangePasswordNextLogin claim (return by the login-NonInteractive) to the user journey-->
            <OutputClaim ClaimTypeReferenceId="forceChangePasswordNextLogin" />
          </OutputClaims>
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>Self Asserted</DisplayName>
      <TechnicalProfiles>
        <!--Password
        reset-->
        <TechnicalProfile Id="SelfAsserted-ForcePasswordReset-ExpiredPassword">
          <DisplayName>Password Expired</DisplayName>
          <Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
          <Metadata>
            <Item Key="ContentDefinitionReferenceId">api.selfasserted</Item>
            <Item Key="UserMessageIfClaimsTransformationBooleanValueIsNotEqual">Please enter a different password</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="userMsg" DefaultValue="Your password has expired, please change to a new password." />
          </InputClaims>
          <DisplayClaims>
            <DisplayClaim ClaimTypeReferenceId="userMsg" />
            <DisplayClaim ClaimTypeReferenceId="password" Required="true" />
            <DisplayClaim ClaimTypeReferenceId="newPassword" Required="true" />
            <DisplayClaim ClaimTypeReferenceId="reenterPassword" Required="true" />
          </DisplayClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <ValidationTechnicalProfiles>
            <!-- 1) validate the old password. 2) Assert whether the new password is different than the old one.
                 3) get the user object ID 4) persist the new password to the directory, and reset the force reset password next logon. -->
            <ValidationTechnicalProfile ReferenceId="login-NonInteractive" />
            <ValidationTechnicalProfile ReferenceId="ThrowErrorWhenPassowrdIsSame" />
            <ValidationTechnicalProfile ReferenceId="AAD-UserReadUsingSignInName" />
            <ValidationTechnicalProfile ReferenceId="AAD-UserWritePasswordUsingObjectId-ResetNextLogin" />
          </ValidationTechnicalProfiles>
          <UseTechnicalProfileForSessionManagement ReferenceId="SM-Noop" />
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>

    <ClaimsProvider>
      <DisplayName>Azure Active Directory</DisplayName>
      <TechnicalProfiles>
        <!--Read
        user objectId by signInName-->
        <TechnicalProfile Id="AAD-UserReadUsingSignInName">
          <Metadata>
            <Item Key="Operation">Read</Item>
          </Metadata>
          <InputClaims>
            <InputClaim ClaimTypeReferenceId="signInName" PartnerClaimType="signInNames.emailAddress" Required="true" />
          </InputClaims>
          <OutputClaims>
            <OutputClaim ClaimTypeReferenceId="objectId" />
          </OutputClaims>
          <IncludeTechnicalProfile ReferenceId="AAD-Common" />
        </TechnicalProfile>
        <!--Save
        the new password to the directory-->
        <TechnicalProfile Id="AAD-UserWritePasswordUsingObjectId-ResetNextLogin">
          <PersistedClaims>
            <PersistedClaim ClaimTypeReferenceId="forceChangePasswordNextLogin" PartnerClaimType="passwordProfile.forceChangePasswordNextLogin" DefaultValue="false" AlwaysUseDefaultValue="true" />
          </PersistedClaims>
          <IncludeTechnicalProfile ReferenceId="AAD-UserWritePasswordUsingObjectId" />
        </TechnicalProfile>
      </TechnicalProfiles>
    </ClaimsProvider>

  </ClaimsProviders>
</TrustFrameworkPolicy>